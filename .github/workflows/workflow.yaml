name: CI - Workflow
on:
  push:
    branches: [master,main]
  pull_request:
    branches: [master,main]
env:
  PYTHON_VERSION: "3.10"
  POETRY_VERSION: "1.7.1"
  PYLINT_THRESHOLD: "0"
  PROJECT_FOLDER: "template"
jobs:
  install-test-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup python versions
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.3.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Install Python dependencies
        run: poetry install 
      - name: Code quality
        run: poetry run pylint --fail-under=${{ env.PYLINT_THRESHOLD }} **/*.py
      - name: Test & Generate Coverage Report
        run: |
          poetry run coverage run --source=${{ env.PROJECT_FOLDER }}/ -m pytest --junitxml=pytest.xml
          poetry run coverage xml
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: [install-test-coverage]
    if: contains(github.event.head_commit.message, 'publish')
    steps:
      - name: Hello World
        run: echo Hello World